{
  "swagger" : "2.0",
  "info" : {
    "description" : "The Vestorly API provides an open REST API for developers to synchronize various data with Vestorly.",
    "version" : "2.0",
    "title" : "Vestorly API v1",
    "termsOfService" : "https://www.vestorly.com/terms/",
    "contact" : {
      "url" : "success@vestorly.com"
    },
    "license" : {
      "name" : "Apache 2.0",
      "url" : "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host" : "developers.vestorly.com",
  "basePath" : "/",
  "schemes" : [ "http" ],
  "paths" : {
    "api/advisors.json" : {
      "post" : {
        "tags" : [ "advisors" ],
        "summary" : "Create an advisor",
        "description" : "This creates an advisor in the database",
        "operationId" : "create",
        "parameters" : [ {
          "name" : "vestorly-auth",
          "in" : "query",
          "description" : "Authentication token",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "advisor",
          "in" : "formData",
          "description" : "JSON block of advisor data",
          "required" : true,
          "type" : "ref"
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/void"
            }
          },
          "201" : {
            "description" : "Created"
          },
          "400" : {
            "description" : "The request you made is not acceptable"
          },
          "401" : {
            "description" : "The request you made does not contain a valid auth token"
          }
        }
      }
    },
    "api/advisors/{advisor_id}/members.json" : {
      "get" : {
        "tags" : [ "members" ],
        "summary" : "Read member lead data",
        "description" : "This lists all the active members for a given advisor",
        "operationId" : "index",
        "parameters" : [ {
          "name" : "vestorly-auth",
          "in" : "query",
          "description" : "Authentication token",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "advisor_id",
          "in" : "path",
          "description" : "Id of Advisor",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "search",
          "in" : "query",
          "description" : "Fuzzy search by name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sorted_by",
          "in" : "query",
          "description" : "Sort by: first_name, last_name, content_views, shares, posts_read, signed_up, last_active",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sorted_order",
          "in" : "query",
          "description" : "Sort order: asc, desc",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/void"
            }
          },
          "400" : {
            "description" : "The request you made is not acceptable"
          },
          "401" : {
            "description" : "The request you made does not contain a valid auth token"
          }
        }
      },
      "post" : {
        "tags" : [ "members" ],
        "summary" : "Create a member",
        "description" : "This creates a member in the database",
        "operationId" : "create",
        "parameters" : [ {
          "name" : "vestorly-auth",
          "in" : "query",
          "description" : "Authentication token",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "advisor_id",
          "in" : "path",
          "description" : "Id of advisor",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "member",
          "in" : "formData",
          "description" : "JSON block of member data",
          "required" : true,
          "type" : "ref"
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/void"
            }
          },
          "201" : {
            "description" : "Created"
          },
          "400" : {
            "description" : "The request you made is not acceptable"
          },
          "401" : {
            "description" : "The request you made does not contain a valid auth token"
          }
        }
      }
    },
    "api/advisors/{advisor_id}/members/{id}.json" : {
      "get" : {
        "tags" : [ "members" ],
        "summary" : "Read a specific member",
        "description" : "This retrieves a specifp ic member object",
        "operationId" : "show",
        "parameters" : [ {
          "name" : "vestorly-auth",
          "in" : "query",
          "description" : "Authentication token",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "advisor_id",
          "in" : "path",
          "description" : "Id of advisor",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Id of member",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/void"
            }
          },
          "400" : {
            "description" : "The request you made is not acceptable"
          },
          "401" : {
            "description" : "The request you made does not contain a valid auth token"
          }
        }
      },
      "put" : {
        "tags" : [ "members" ],
        "summary" : "Update a member",
        "description" : "This updates a member in the database",
        "operationId" : "update",
        "parameters" : [ {
          "name" : "vestorly-auth",
          "in" : "query",
          "description" : "Authentication token",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "advisor_id",
          "in" : "path",
          "description" : "Id of advisor",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Id of member",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "member",
          "in" : "formData",
          "description" : "JSON block of member data",
          "required" : true,
          "type" : "ref"
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/void"
            }
          },
          "400" : {
            "description" : "The request you made is not acceptable"
          },
          "401" : {
            "description" : "The request you made does not contain a valid auth token"
          }
        }
      },
      "delete" : {
        "tags" : [ "members" ],
        "summary" : "Deletes a member",
        "description" : "This deletes a member in the database",
        "operationId" : "destroy",
        "parameters" : [ {
          "name" : "vestorly-auth",
          "in" : "query",
          "description" : "Authentication token",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "advisor_id",
          "in" : "path",
          "description" : "Id of advisor",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Id of member",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/void"
            }
          },
          "400" : {
            "description" : "The request you made is not acceptable"
          },
          "401" : {
            "description" : "The request you made does not contain a valid auth token"
          }
        }
      }
    },
    "api/advisors/{advisor_id}/posts.json" : {
      "get" : {
        "tags" : [ "posts" ],
        "summary" : "Read a list of posts",
        "description" : "This retrieves a list of post objects",
        "operationId" : "index",
        "parameters" : [ {
          "name" : "vestorly-auth",
          "in" : "query",
          "description" : "Authentication token",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "filter_by",
          "in" : "query",
          "description" : "Supports [all/published/unpublished/features/vestorly/newsletter]",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "filter_by_group_id",
          "in" : "query",
          "description" : "Filter by group id",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "filter_by_newsletter_id",
          "in" : "query",
          "description" : "Filter by newsletter",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/void"
            }
          },
          "400" : {
            "description" : "The request you made is not acceptable"
          },
          "401" : {
            "description" : "The request you made does not contain a valid auth token"
          }
        }
      },
      "post" : {
        "tags" : [ "posts" ],
        "summary" : "Create an post",
        "description" : "This creates an post in the database",
        "operationId" : "create",
        "parameters" : [ {
          "name" : "vestorly-auth",
          "in" : "query",
          "description" : "Authentication token",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "advisor_id",
          "in" : "path",
          "description" : "Id of advisor",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "post",
          "in" : "formData",
          "description" : "JSON block of post data",
          "required" : true,
          "type" : "ref"
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/void"
            }
          },
          "201" : {
            "description" : "Created"
          },
          "400" : {
            "description" : "The request you made is not acceptable"
          },
          "401" : {
            "description" : "The request you made does not contain a valid auth token"
          }
        }
      }
    },
    "api/advisors/{advisor_id}/posts/{id}.json" : {
      "get" : {
        "tags" : [ "posts" ],
        "summary" : "Read a specific post",
        "description" : "This retrieves a specific post object",
        "operationId" : "show",
        "parameters" : [ {
          "name" : "vestorly-auth",
          "in" : "query",
          "description" : "Authentication token",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Id of post",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "advisor_id",
          "in" : "path",
          "description" : "Id of advisor",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/void"
            }
          },
          "400" : {
            "description" : "The request you made is not acceptable"
          },
          "401" : {
            "description" : "The request you made does not contain a valid auth token"
          }
        }
      },
      "put" : {
        "tags" : [ "posts" ],
        "summary" : "Update a post",
        "description" : "This updates a post in the database",
        "operationId" : "update",
        "parameters" : [ {
          "name" : "vestorly-auth",
          "in" : "query",
          "description" : "Authentication token",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Id of post",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "advisor_id",
          "in" : "path",
          "description" : "Id of advisor",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "post",
          "in" : "formData",
          "description" : "JSON block of post data",
          "required" : true,
          "type" : "ref"
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/void"
            }
          },
          "400" : {
            "description" : "The request you made is not acceptable"
          },
          "401" : {
            "description" : "The request you made does not contain a valid auth token"
          }
        }
      },
      "delete" : {
        "tags" : [ "posts" ],
        "summary" : "Deletes a post",
        "description" : "This deletes a post in the database",
        "operationId" : "destroy",
        "parameters" : [ {
          "name" : "vestorly-auth",
          "in" : "query",
          "description" : "Authentication token",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Id of advisor",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/void"
            }
          },
          "400" : {
            "description" : "The request you made is not acceptable"
          },
          "401" : {
            "description" : "The request you made does not contain a valid auth token"
          },
          "500" : {
            "description" : "Destroyed"
          }
        }
      }
    },
    "api/advisors/{id}.json" : {
      "get" : {
        "tags" : [ "advisors" ],
        "summary" : "Read a specific advisor",
        "description" : "This retrieves a specifp advisor object",
        "operationId" : "show",
        "parameters" : [ {
          "name" : "vestorly-auth",
          "in" : "query",
          "description" : "Authentication token",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Id of advisor",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "filter_by",
          "in" : "query",
          "description" : "Filtered by [signups/page_views]",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/void"
            }
          },
          "400" : {
            "description" : "The request you made is not acceptable"
          },
          "401" : {
            "description" : "The request you made does not contain a valid auth token"
          }
        }
      },
      "put" : {
        "tags" : [ "advisors" ],
        "summary" : "Update a advisor",
        "description" : "This updates a advisor in the database",
        "operationId" : "update",
        "parameters" : [ {
          "name" : "vestorly-auth",
          "in" : "query",
          "description" : "Authentication token",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Id of advisor",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/void"
            }
          },
          "400" : {
            "description" : "The request you made is not acceptable"
          },
          "401" : {
            "description" : "The request you made does not contain a valid auth token"
          }
        }
      }
    }
  },
  "definitions" : {
    "Post" : {
      "required" : [ "_id", "body", "comment", "title" ],
      "properties" : {
        "_id" : {
          "type" : "string",
          "description" : "Id of object"
        },
        "title" : {
          "type" : "string",
          "description" : "Title of the post"
        },
        "body" : {
          "type" : "string",
          "description" : "Body of the post"
        },
        "comment" : {
          "type" : "string",
          "description" : "Comment associated with the post"
        },
        "video" : {
          "type" : "string",
          "description" : "Video associated with the post"
        },
        "img" : {
          "type" : "string",
          "description" : "Image associated with the post"
        }
      },
      "description" : "A Post object."
    },
    "Advisor" : {
      "required" : [ "_id", "account_type", "address", "advisor_employees", "assets", "city", "company", "first_name", "last_name", "num_clients", "reg_number", "state", "zip" ],
      "properties" : {
        "_id" : {
          "type" : "string",
          "description" : "Id of object"
        },
        "company" : {
          "type" : "string",
          "description" : "Company of advisor"
        },
        "address" : {
          "type" : "string",
          "description" : "Address of advisor"
        },
        "city" : {
          "type" : "string",
          "description" : "City of advisor"
        },
        "state" : {
          "type" : "string",
          "description" : "State of advisor"
        },
        "zip" : {
          "type" : "string",
          "description" : "Zip of advisor"
        },
        "first_name" : {
          "type" : "string",
          "description" : "First name of advisor"
        },
        "last_name" : {
          "type" : "string",
          "description" : "Last name of advisor"
        },
        "reg_number" : {
          "type" : "string",
          "description" : "Registration number of advisor"
        },
        "account_type" : {
          "type" : "string",
          "description" : "Account type of advisor"
        },
        "advisor_employees" : {
          "type" : "string",
          "description" : "Employees of advisor"
        },
        "assets" : {
          "type" : "string",
          "description" : "Assets of advisor"
        },
        "num_clients" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Number of clients the advisor has"
        }
      },
      "description" : "An Advisor object."
    },
    "Member" : {
      "required" : [ "_id", "email" ],
      "properties" : {
        "_id" : {
          "type" : "string",
          "description" : "Id of object"
        },
        "email" : {
          "type" : "string",
          "description" : "Email Address"
        },
        "first_name" : {
          "type" : "string",
          "description" : "First Name"
        },
        "last_name" : {
          "type" : "string",
          "description" : "Last Name"
        },
        "phone" : {
          "type" : "string",
          "description" : "Phone Number"
        },
        "address" : {
          "type" : "string",
          "description" : "Postal Address"
        },
        "city" : {
          "type" : "string",
          "description" : "Postal City"
        },
        "state" : {
          "type" : "string",
          "description" : "Postal State"
        },
        "zip" : {
          "type" : "string",
          "description" : "Postal Zipcode"
        },
        "gender" : {
          "type" : "string",
          "description" : "Gender"
        },
        "age" : {
          "type" : "string",
          "description" : "Age Range"
        },
        "education" : {
          "type" : "string",
          "description" : "Education"
        },
        "high_net_worth" : {
          "type" : "boolean",
          "description" : "High Net Worth"
        },
        "home_market_value" : {
          "type" : "string",
          "description" : "Home Market Value"
        },
        "home_owner_status" : {
          "type" : "string",
          "description" : "Home Owner Status"
        },
        "household_income" : {
          "type" : "string",
          "description" : "Household Income"
        },
        "marital_status" : {
          "type" : "string",
          "description" : "Marital Status"
        },
        "occupation" : {
          "type" : "string",
          "description" : "Occupation"
        },
        "hometown" : {
          "type" : "string",
          "description" : "Hometown"
        },
        "family" : {
          "type" : "string",
          "description" : "Family Members"
        },
        "tags" : {
          "type" : "string",
          "description" : "Tags"
        },
        "message" : {
          "type" : "string",
          "description" : "Message and notes"
        },
        "location" : {
          "type" : "string",
          "description" : "Location"
        },
        "picture_url" : {
          "type" : "string",
          "description" : "Picture URL"
        },
        "profile_url" : {
          "type" : "string",
          "description" : "Social Profile URL"
        },
        "estimated_location" : {
          "type" : "string",
          "description" : "Estimated Location"
        },
        "estimated_zip" : {
          "type" : "string",
          "description" : "Estimated Zipcode"
        },
        "register_ip_addr" : {
          "type" : "string",
          "description" : "First recorded IP Address"
        },
        "data_estimated" : {
          "type" : "boolean",
          "description" : "Data Estimated"
        },
        "genuine_email" : {
          "type" : "boolean",
          "description" : "Genuine Email address"
        }
      },
      "description" : "A Member object."
    }
  }
}
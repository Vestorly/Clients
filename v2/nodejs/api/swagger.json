{
  "swagger": "2.0",
  "info": {
    "title": "Vestorly API",
    "description": "Vestorly Developers API",
    "version": "1.0.0"
  },
  "produces": ["application/json"],
  "host": "localhost:8080",
  "basePath": "/api/v2",
  "paths": {
  
  "/newsletter_settings": {
    "get": {
      "x-swagger-router-controller": "Newslettersettings",
      "tags": ["Newslettersettings"],
      "operationId": "findNewsletterSettings",
      "parameters": [
        
        {
  "name" : "vestorly-auth",
  "in" : "query",
  "description" : "Vestorly Auth Token",
  "required" : true,
  "type" : "string",
  "format" : "string"
}
        
      ],
      "responses": {
        
        "200": {
  "description" : "newsletter settings response",
  "schema" : {
    "$ref" : "#/definitions/NewsletterSettings"
  }
}
        
        
      }
    }
  } ,
  
  "/newsletter_settings": {
    "put": {
      "x-swagger-router-controller": "Newslettersettings",
      "tags": ["Newslettersettings"],
      "operationId": "updateNewsletterSettingsByID",
      "parameters": [
        
        {
  "name" : "vestorly-auth",
  "in" : "query",
  "description" : "Vestorly Auth Token",
  "required" : true,
  "type" : "string",
  "format" : "string"
},
        
        {
  "name" : "newsletter_settings",
  "in" : "formData",
  "description" : "newsletter settings",
  "required" : true
}
        
      ],
      "responses": {
        
        "200": {
  "description" : "newsletter settings response",
  "schema" : {
    "$ref" : "#/definitions/NewsletterSettings"
  }
}
        
        
      }
    }
  } ,
  
  "/newsletter_settings/{id}": {
    "get": {
      "x-swagger-router-controller": "Newslettersettings",
      "tags": ["Newslettersettings"],
      "operationId": "findNewsletterSettingsByID",
      "parameters": [
        
        {
  "name" : "id",
  "in" : "path",
  "description" : "Mongo ID of newsletter settings to fetch",
  "required" : true,
  "type" : "string",
  "format" : "string"
},
        
        {
  "name" : "vestorly-auth",
  "in" : "query",
  "description" : "Vestorly Auth Token",
  "required" : true,
  "type" : "string",
  "format" : "string"
}
        
      ],
      "responses": {
        
        "200": {
  "description" : "newsletting setting response",
  "schema" : {
    "$ref" : "#/definitions/NewsletterSettings"
  }
}
        
        
      }
    }
  } 
  
   ,
  
  "/events": {
    "get": {
      "x-swagger-router-controller": "Events",
      "tags": ["Events"],
      "operationId": "findEvents",
      "parameters": [
        
        {
  "name" : "vestorly-auth",
  "in" : "query",
  "description" : "Vestorly Auth Token",
  "required" : true,
  "type" : "string",
  "format" : "string"
}
        
      ],
      "responses": {
        
        "200": {
  "description" : "Event response",
  "schema" : {
    "$ref" : "#/definitions/Events"
  }
}
        
        
      }
    }
  } ,
  
  "/events/{id}": {
    "get": {
      "x-swagger-router-controller": "Events",
      "tags": ["Events"],
      "operationId": "findEventByID",
      "parameters": [
        
        {
  "name" : "id",
  "in" : "path",
  "description" : "Mongo ID of event to fetch",
  "required" : true,
  "type" : "string",
  "format" : "string"
},
        
        {
  "name" : "vestorly-auth",
  "in" : "query",
  "description" : "Vestorly Auth Token",
  "required" : true,
  "type" : "string",
  "format" : "string"
}
        
      ],
      "responses": {
        
        "200": {
  "description" : "Event response",
  "schema" : {
    "$ref" : "#/definitions/Event"
  }
}
        
        
      }
    }
  } ,
  
  "/events/{id}": {
    "put": {
      "x-swagger-router-controller": "Events",
      "tags": ["Events"],
      "operationId": "updateEventByID",
      "parameters": [
        
        {
  "name" : "id",
  "in" : "path",
  "description" : "Mongo ID of event to update",
  "required" : true,
  "type" : "string",
  "format" : "string"
},
        
        {
  "name" : "vestorly-auth",
  "in" : "query",
  "description" : "Vestorly Auth Token",
  "required" : true,
  "type" : "string",
  "format" : "string"
},
        
        {
  "name" : "Event",
  "in" : "formData",
  "description" : "Event",
  "required" : true
}
        
      ],
      "responses": {
        
        "200": {
  "description" : "Event response",
  "schema" : {
    "$ref" : "#/definitions/Event"
  }
}
        
        
      }
    }
  } 
  
   ,
  
  "/articles": {
    "get": {
      "x-swagger-router-controller": "Articles",
      "tags": ["Articles"],
      "operationId": "findArticles",
      "parameters": [
        
        {
  "name" : "vestorly-auth",
  "in" : "query",
  "description" : "Vestorly Auth Token",
  "required" : true,
  "type" : "string",
  "format" : "string"
},
        
        {
  "name" : "limit",
  "in" : "query",
  "description" : "Limit on the number of articles to return",
  "required" : false,
  "type" : "integer",
  "format" : "int32"
},
        
        {
  "name" : "text_query",
  "in" : "query",
  "description" : "Search query parameter",
  "required" : false,
  "type" : "string",
  "format" : "string"
}
        
      ],
      "responses": {
        
        "200": {
  "description" : "Response"
}
        
        
      }
    }
  } ,
  
  "/articles/{id}": {
    "get": {
      "x-swagger-router-controller": "Articles",
      "tags": ["Articles"],
      "operationId": "findArticleByID",
      "parameters": [
        
        {
  "name" : "id",
  "in" : "path",
  "description" : "Article Id to fetch",
  "required" : true,
  "type" : "string",
  "format" : "string"
}
        
      ],
      "responses": {
        
        "200": {
  "description" : "Article response",
  "schema" : {
    "$ref" : "#/definitions/Article"
  }
}
        
        
      }
    }
  } 
  
   ,
  
  "/groups": {
    "get": {
      "x-swagger-router-controller": "Groups",
      "tags": ["Groups"],
      "operationId": "findGroups",
      "parameters": [
        
        {
  "name" : "vestorly-auth",
  "in" : "query",
  "description" : "Vestorly Auth Token",
  "required" : true,
  "type" : "string",
  "format" : "string"
}
        
      ],
      "responses": {
        
        "200": {
  "description" : "Group response",
  "schema" : {
    "$ref" : "#/definitions/Groups"
  }
}
        
        
      }
    }
  } ,
  
  "/groups/{id}": {
    "get": {
      "x-swagger-router-controller": "Groups",
      "tags": ["Groups"],
      "operationId": "findGroupByID",
      "parameters": [
        
        {
  "name" : "vestorly-auth",
  "in" : "query",
  "description" : "Vestorly Auth Token",
  "required" : true,
  "type" : "string",
  "format" : "string"
},
        
        {
  "name" : "id",
  "in" : "path",
  "description" : "Mongo ID of group to fetch",
  "required" : true,
  "type" : "string",
  "format" : "string"
}
        
      ],
      "responses": {
        
        "200": {
  "description" : "Group response",
  "schema" : {
    "$ref" : "#/definitions/Group"
  }
}
        
        
      }
    }
  } ,
  
  "/groups/{id}": {
    "put": {
      "x-swagger-router-controller": "Groups",
      "tags": ["Groups"],
      "operationId": "addGroup",
      "parameters": [
        
        {
  "in" : "body",
  "name" : "group",
  "description" : "Group to add",
  "required" : true,
  "schema" : {
    "$ref" : "#/definitions/Group"
  }
}
        
      ],
      "responses": {
        
        "200": {
  "description" : "group response",
  "schema" : {
    "$ref" : "#/definitions/GroupInput"
  }
}
        ,
        
        "default": {
  "description" : "unexpected error",
  "schema" : {
    "$ref" : "#/definitions/ErrorModel"
  }
}
        
        
      }
    }
  } ,
  
  "/groups/{id}": {
    "post": {
      "x-swagger-router-controller": "Groups",
      "tags": ["Groups"],
      "operationId": "addGroup",
      "parameters": [
        
        {
  "in" : "body",
  "name" : "group",
  "description" : "Group to add",
  "required" : true,
  "schema" : {
    "$ref" : "#/definitions/Group"
  }
}
        
      ],
      "responses": {
        
        "200": {
  "description" : "group response",
  "schema" : {
    "$ref" : "#/definitions/GroupInput"
  }
}
        ,
        
        "default": {
  "description" : "unexpected error",
  "schema" : {
    "$ref" : "#/definitions/ErrorModel"
  }
}
        
        
      }
    }
  } ,
  
  "/groups/{id}": {
    "delete": {
      "x-swagger-router-controller": "Groups",
      "tags": ["Groups"],
      "operationId": "deleteGroup",
      "parameters": [
        
        {
  "in" : "body",
  "name" : "group",
  "description" : "Group to remove",
  "required" : true,
  "schema" : {
    "$ref" : "#/definitions/Group"
  }
}
        
      ],
      "responses": {
        
        "200": {
  "description" : "group response",
  "schema" : {
    "$ref" : "#/definitions/GroupInput"
  }
}
        ,
        
        "default": {
  "description" : "unexpected error",
  "schema" : {
    "$ref" : "#/definitions/ErrorModel"
  }
}
        
        
      }
    }
  } 
  
   ,
  
  "/member_events": {
    "get": {
      "x-swagger-router-controller": "Memberevents",
      "tags": ["Memberevents"],
      "operationId": "findMemberEvents",
      "parameters": [
        
        {
  "name" : "vestorly-auth",
  "in" : "query",
  "description" : "Vestorly Auth Token",
  "required" : true,
  "type" : "string",
  "format" : "string"
}
        
      ],
      "responses": {
        
        "200": {
  "description" : "Member Eventsresponse",
  "schema" : {
    "$ref" : "#/definitions/MemberEvents"
  }
}
        
        
      }
    }
  } 
  
   ,
  
  "/advisors": {
    "get": {
      "x-swagger-router-controller": "Advisors",
      "tags": ["Advisors"],
      "operationId": "findAdvisors",
      "parameters": [
        
        {
  "name" : "vestorly-auth",
  "in" : "query",
  "description" : "Vestorly Auth Token",
  "required" : true,
  "type" : "string",
  "format" : "string"
}
        
      ],
      "responses": {
        
      }
    }
  } ,
  
  "/advisors/{id}": {
    "get": {
      "x-swagger-router-controller": "Advisors",
      "tags": ["Advisors"],
      "operationId": "findAdvisorByID",
      "parameters": [
        
        {
  "name" : "id",
  "in" : "path",
  "description" : "Mongo ID of advisor to fetch",
  "required" : true,
  "type" : "string",
  "format" : "string"
},
        
        {
  "name" : "vestorly-auth",
  "in" : "query",
  "description" : "Vestorly Auth Token",
  "required" : true,
  "type" : "string",
  "format" : "string"
}
        
      ],
      "responses": {
        
        "200": {
  "description" : "Advisor response",
  "schema" : {
    "$ref" : "#/definitions/Advisor"
  }
}
        
        
      }
    }
  } 
  
   ,
  
  "/sessions": {
    "post": {
      "x-swagger-router-controller": "Sessions",
      "tags": ["Sessions"],
      "operationId": "login",
      "parameters": [
        
        {
  "name" : "username",
  "in" : "formData",
  "description" : "Username in the vestorly platform",
  "required" : true,
  "type" : "string"
},
        
        {
  "name" : "password",
  "in" : "formData",
  "description" : "Password in Vestorly Platform",
  "required" : true,
  "type" : "password"
}
        
      ],
      "responses": {
        
        "200": {
  "description" : "Response",
  "schema" : {
    "$ref" : "#/definitions/Session"
  }
}
        
        
      }
    }
  } ,
  
  "/sessions/{id}": {
    "delete": {
      "x-swagger-router-controller": "Sessions",
      "tags": ["Sessions"],
      "operationId": "logout",
      "parameters": [
        
        {
  "name" : "vestorly-auth",
  "in" : "formData",
  "description" : "Authenication token",
  "required" : true,
  "type" : "string"
}
        
      ],
      "responses": {
        
        "200": {
  "description" : "Response",
  "schema" : {
    "$ref" : "#/definitions/Session"
  }
}
        
        
      }
    }
  } 
  
   ,
  
  "/newsletters": {
    "get": {
      "x-swagger-router-controller": "Newsletters",
      "tags": ["Newsletters"],
      "operationId": "findNewsletters",
      "parameters": [
        
        {
  "name" : "vestorly-auth",
  "in" : "query",
  "description" : "Vestorly Auth Token",
  "required" : true,
  "type" : "string",
  "format" : "string"
}
        
      ],
      "responses": {
        
        "200": {
  "description" : "Response",
  "schema" : {
    "$ref" : "#/definitions/Newsletters"
  }
}
        
        
      }
    }
  } ,
  
  "/newsletters/{id}": {
    "get": {
      "x-swagger-router-controller": "Newsletters",
      "tags": ["Newsletters"],
      "operationId": "getNewsletterByID",
      "parameters": [
        
        {
  "name" : "vestorly-auth",
  "in" : "query",
  "description" : "Vestorly Auth Token",
  "required" : true,
  "type" : "string",
  "format" : "string"
},
        
        {
  "name" : "id",
  "in" : "path",
  "description" : "ID of newsletter to fetch",
  "required" : true,
  "type" : "string"
}
        
      ],
      "responses": {
        
        "200": {
  "description" : "Response",
  "schema" : {
    "$ref" : "#/definitions/Newsletter"
  }
}
        
        
      }
    }
  } ,
  
  "/newsletters/{id}": {
    "put": {
      "x-swagger-router-controller": "Newsletters",
      "tags": ["Newsletters"],
      "operationId": "updateNewsletter",
      "parameters": [
        
        {
  "name" : "vestorly-auth",
  "in" : "query",
  "description" : "Vestorly Auth Token",
  "required" : true,
  "type" : "string",
  "format" : "string"
},
        
        {
  "name" : "id",
  "in" : "path",
  "description" : "ID of newsletter to fetch",
  "required" : true,
  "type" : "string"
},
        
        {
  "name" : "Newsletter",
  "in" : "formData",
  "description" : "Newsletter",
  "required" : true
}
        
      ],
      "responses": {
        
        "200": {
  "description" : "Response",
  "schema" : {
    "$ref" : "#/definitions/Newsletter"
  }
}
        
        
      }
    }
  } 
  
   ,
  
  "/posts": {
    "get": {
      "x-swagger-router-controller": "Posts",
      "tags": ["Posts"],
      "operationId": "findPosts",
      "parameters": [
        
        {
  "name" : "vestorly-auth",
  "in" : "query",
  "description" : "Vestorly Auth Token",
  "required" : true,
  "type" : "string",
  "format" : "string"
},
        
        {
  "name" : "filter_by",
  "in" : "query",
  "description" : "Filter post by parameters",
  "required" : false
}
        
      ],
      "responses": {
        
        "200": {
  "description" : "posts response",
  "schema" : {
    "$ref" : "#/definitions/Posts"
  }
}
        
        
      }
    }
  } ,
  
  "/posts": {
    "post": {
      "x-swagger-router-controller": "Posts",
      "tags": ["Posts"],
      "operationId": "createPost",
      "parameters": [
        
        {
  "name" : "vestorly-auth",
  "in" : "query",
  "description" : "Vestorly Auth Token",
  "required" : true,
  "type" : "string",
  "format" : "string"
},
        
        {
  "name" : "Post",
  "in" : "formData",
  "description" : "Post",
  "required" : true
}
        
      ],
      "responses": {
        
        "200": {
  "description" : "posts response",
  "schema" : {
    "$ref" : "#/definitions/Post"
  }
}
        
        
      }
    }
  } ,
  
  "/posts/{id}": {
    "get": {
      "x-swagger-router-controller": "Posts",
      "tags": ["Posts"],
      "operationId": "getPostByID",
      "parameters": [
        
        {
  "name" : "vestorly-auth",
  "in" : "query",
  "description" : "Vestorly Auth Token",
  "required" : true,
  "type" : "string",
  "format" : "string"
},
        
        {
  "name" : "id",
  "in" : "path",
  "description" : "ID of post to fetch",
  "required" : true,
  "type" : "string"
},
        
        {
  "name" : "filter_by",
  "in" : "query",
  "description" : "Filter post by parameters",
  "required" : false
}
        
      ],
      "responses": {
        
        "200": {
  "description" : "post response",
  "schema" : {
    "$ref" : "#/definitions/Post"
  }
}
        
        
      }
    }
  } ,
  
  "/posts/{id}": {
    "put": {
      "x-swagger-router-controller": "Posts",
      "tags": ["Posts"],
      "operationId": "updatePostByID",
      "parameters": [
        
        {
  "name" : "vestorly-auth",
  "in" : "query",
  "description" : "Vestorly Auth Token",
  "required" : true,
  "type" : "string",
  "format" : "string"
},
        
        {
  "name" : "id",
  "in" : "path",
  "description" : "ID of post to fetch",
  "required" : true,
  "type" : "string"
},
        
        {
  "name" : "Post",
  "in" : "formData",
  "description" : "Post",
  "required" : true
}
        
      ],
      "responses": {
        
        "200": {
  "description" : "post response",
  "schema" : {
    "$ref" : "#/definitions/Post"
  }
}
        
        
      }
    }
  } 
  
   ,
  
  "/sources": {
    "get": {
      "x-swagger-router-controller": "Sources",
      "tags": ["Sources"],
      "operationId": "findSources",
      "parameters": [
        
        {
  "name" : "vestorly-auth",
  "in" : "query",
  "description" : "Vestorly Auth Token",
  "required" : true,
  "type" : "string",
  "format" : "string"
}
        
      ],
      "responses": {
        
        "200": {
  "description" : "source response",
  "schema" : {
    "$ref" : "#/definitions/Sources"
  }
}
        
        
      }
    }
  } ,
  
  "/sources/": {
    "post": {
      "x-swagger-router-controller": "Sources",
      "tags": ["Sources"],
      "operationId": "createSource",
      "parameters": [
        
        {
  "name" : "vestorly-auth",
  "in" : "query",
  "description" : "Vestorly Auth Token",
  "required" : true,
  "type" : "string",
  "format" : "string"
},
        
        {
  "name" : "Source",
  "in" : "formData",
  "description" : "Source",
  "required" : true
}
        
      ],
      "responses": {
        
        "200": {
  "description" : "source response",
  "schema" : {
    "$ref" : "#/definitions/Source"
  }
}
        
        
      }
    }
  } ,
  
  "/sources/{id}": {
    "get": {
      "x-swagger-router-controller": "Sources",
      "tags": ["Sources"],
      "operationId": "getSourceByID",
      "parameters": [
        
        {
  "name" : "vestorly-auth",
  "in" : "query",
  "description" : "Vestorly Auth Token",
  "required" : true,
  "type" : "string",
  "format" : "string"
},
        
        {
  "name" : "id",
  "in" : "path",
  "description" : "ID of source to fetch",
  "required" : true,
  "type" : "string"
}
        
      ],
      "responses": {
        
        "200": {
  "description" : "source response",
  "schema" : {
    "$ref" : "#/definitions/Source"
  }
}
        
        
      }
    }
  } ,
  
  "/sources/{id}": {
    "put": {
      "x-swagger-router-controller": "Sources",
      "tags": ["Sources"],
      "operationId": "UpdateSourceByID",
      "parameters": [
        
        {
  "name" : "vestorly-auth",
  "in" : "query",
  "description" : "Vestorly Auth Token",
  "required" : true,
  "type" : "string",
  "format" : "string"
},
        
        {
  "name" : "id",
  "in" : "path",
  "description" : "ID of source to fetch",
  "required" : true,
  "type" : "string"
},
        
        {
  "name" : "Source",
  "in" : "formData",
  "description" : "Source",
  "required" : true
}
        
      ],
      "responses": {
        
        "200": {
  "description" : "source response",
  "schema" : {
    "$ref" : "#/definitions/Source"
  }
}
        
        
      }
    }
  } 
  
   ,
  
  "/members": {
    "get": {
      "x-swagger-router-controller": "Members",
      "tags": ["Members"],
      "operationId": "findMembers",
      "parameters": [
        
        {
  "name" : "vestorly-auth",
  "in" : "query",
  "description" : "Vestorly Auth Token",
  "required" : true,
  "type" : "string",
  "format" : "string"
}
        
      ],
      "responses": {
        
        "200": {
  "description" : "Member response",
  "schema" : {
    "$ref" : "#/definitions/Members"
  }
}
        
        
      }
    }
  } ,
  
  "/members/{id}": {
    "get": {
      "x-swagger-router-controller": "Members",
      "tags": ["Members"],
      "operationId": "findMemberByID",
      "parameters": [
        
        {
  "name" : "id",
  "in" : "path",
  "description" : "Mongo ID of member to fetch",
  "required" : true,
  "type" : "string",
  "format" : "string"
},
        
        {
  "name" : "vestorly-auth",
  "in" : "query",
  "description" : "Vestorly Auth Token",
  "required" : true,
  "type" : "string",
  "format" : "string"
}
        
      ],
      "responses": {
        
        "200": {
  "description" : "Member response",
  "schema" : {
    "$ref" : "#/definitions/Member"
  }
}
        
        
      }
    }
  } ,
  
  "/members/{id}": {
    "put": {
      "x-swagger-router-controller": "Members",
      "tags": ["Members"],
      "operationId": "findMemberByID",
      "parameters": [
        
        {
  "name" : "id",
  "in" : "path",
  "description" : "Mongo ID of member to fetch",
  "required" : true,
  "type" : "string",
  "format" : "string"
},
        
        {
  "name" : "vestorly-auth",
  "in" : "query",
  "description" : "Vestorly Auth Token",
  "required" : true,
  "type" : "string",
  "format" : "string"
}
        
      ],
      "responses": {
        
        "200": {
  "description" : "Member response",
  "schema" : {
    "$ref" : "#/definitions/Member"
  }
}
        
        
      }
    }
  } 
  
   
  }, "definitions": {
  "Source": {
  "required" : [ "_id", "custom_rss_feed", "enabled", "logo_url", "name", "rss_publisher" ],
  "properties" : {
    "_id" : {
      "type" : "string"
    },
    "name" : {
      "type" : "string"
    },
    "url" : {
      "type" : "string"
    },
    "logo_url" : {
      "type" : "string"
    },
    "enabled" : {
      "type" : "boolean",
      "default" : false
    },
    "custom_rss_feed" : {
      "type" : "boolean",
      "default" : false
    },
    "rss_publisher" : {
      "type" : "string"
    }
  }
},"SourceInput": {
  "required" : [ "custom_rss_feed", "enabled", "logo_url", "name", "rss_publisher" ],
  "properties" : {
    "name" : {
      "type" : "string"
    },
    "url" : {
      "type" : "string"
    },
    "logo_url" : {
      "type" : "string"
    },
    "enabled" : {
      "type" : "boolean",
      "default" : false
    },
    "custom_rss_feed" : {
      "type" : "boolean",
      "default" : false
    },
    "rss_publisher" : {
      "type" : "string"
    }
  }
},"Sources": {
  "properties" : {
    "sources" : {
      "type" : "array",
      "items" : {
        "$ref" : "#/definitions/Source"
      }
    }
  }
},"Members": {
  "properties" : {
    "members" : {
      "type" : "array",
      "items" : {
        "$ref" : "#/definitions/Member"
      }
    }
  }
},"Advisor": {
  "properties" : {
    "new_user" : {
      "type" : "boolean",
      "default" : false
    }
  }
},"Article": { },"Articles": {
  "properties" : {
    "articles" : {
      "type" : "array",
      "items" : {
        "$ref" : "#/definitions/Article"
      }
    }
  }
},"Newsletter": {
  "properties" : {
    "is_sent" : {
      "type" : "boolean",
      "default" : false
    },
    "is_default" : {
      "type" : "boolean",
      "default" : false
    },
    "click_count" : {
      "type" : "integer",
      "format" : "int64"
    },
    "unique_click_count" : {
      "type" : "integer",
      "format" : "int64"
    },
    "total_click_count" : {
      "type" : "integer",
      "format" : "int64"
    }
  }
},"NewsletterInput": {
  "properties" : {
    "is_sent" : {
      "type" : "boolean",
      "default" : false
    },
    "is_default" : {
      "type" : "boolean",
      "default" : false
    },
    "click_count" : {
      "type" : "integer",
      "format" : "int64"
    },
    "unique_click_count" : {
      "type" : "integer",
      "format" : "int64"
    },
    "total_click_count" : {
      "type" : "integer",
      "format" : "int64"
    }
  }
},"Newsletters": {
  "properties" : {
    "newletters" : {
      "type" : "array",
      "items" : {
        "$ref" : "#/definitions/Newsletter"
      }
    }
  }
},"Posts": {
  "properties" : {
    "posts" : {
      "type" : "array",
      "items" : {
        "$ref" : "#/definitions/Post"
      }
    }
  }
},"Post": {
  "properties" : {
    "client_only" : {
      "type" : "boolean",
      "default" : false
    },
    "img_compressed" : {
      "type" : "boolean",
      "default" : false
    },
    "img_changed" : {
      "type" : "boolean",
      "default" : false
    }
  }
},"EventInput": {
  "required" : [ "advisor_email", "newsletter", "original_url", "originator_group_name", "subject_email" ],
  "properties" : {
    "referrer" : {
      "type" : "string"
    },
    "original_url" : {
      "type" : "string"
    },
    "originator_email" : {
      "type" : "string"
    },
    "subject_email" : {
      "type" : "string"
    },
    "advisor_email" : {
      "type" : "string"
    },
    "originator_group_name" : {
      "type" : "string"
    },
    "newsletter" : {
      "type" : "string"
    }
  }
},"Events": {
  "properties" : {
    "events" : {
      "type" : "array",
      "items" : {
        "$ref" : "#/definitions/Event"
      }
    }
  }
},"Event": {
  "required" : [ "_id", "advisor_email", "newsletter", "original_url", "originator_group_name", "subject_email" ],
  "properties" : {
    "_id" : {
      "type" : "string"
    },
    "referrer" : {
      "type" : "string"
    },
    "original_url" : {
      "type" : "string"
    },
    "originator_email" : {
      "type" : "string"
    },
    "subject_email" : {
      "type" : "string"
    },
    "advisor_email" : {
      "type" : "string"
    },
    "originator_group_name" : {
      "type" : "string"
    },
    "newsletter" : {
      "type" : "string"
    }
  }
},"Group": {
  "required" : [ "_id" ],
  "properties" : {
    "_id" : {
      "type" : "string"
    },
    "name" : {
      "type" : "string"
    },
    "is_default" : {
      "type" : "boolean",
      "default" : false
    },
    "is_hidden" : {
      "type" : "boolean",
      "default" : false
    },
    "new_weekly_mailer_content" : {
      "type" : "string"
    },
    "newsletter_subject" : {
      "type" : "string"
    },
    "autopublish" : {
      "type" : "boolean",
      "default" : false
    },
    "number_articles_per_group" : {
      "type" : "integer",
      "format" : "int32"
    },
    "number_articles_per_newsletter" : {
      "type" : "integer",
      "format" : "int32"
    }
  }
},"GroupInput": {
  "required" : [ "_id" ],
  "properties" : {
    "_id" : {
      "type" : "string"
    },
    "name" : {
      "type" : "string"
    },
    "is_default" : {
      "type" : "boolean",
      "default" : false
    },
    "is_hidden" : {
      "type" : "boolean",
      "default" : false
    },
    "new_weekly_mailer_content" : {
      "type" : "string"
    },
    "newsletter_subject" : {
      "type" : "string"
    },
    "autopublish" : {
      "type" : "boolean",
      "default" : false
    },
    "number_articles_per_group" : {
      "type" : "integer",
      "format" : "int32"
    },
    "number_articles_per_newsletter" : {
      "type" : "integer",
      "format" : "int32"
    }
  }
},"Groups": {
  "properties" : {
    "groups" : {
      "type" : "array",
      "items" : {
        "$ref" : "#/definitions/Group"
      }
    }
  }
},"NewsletterSettingsInput": {
  "properties" : {
    "email_status" : {
      "type" : "string"
    },
    "twitter_status" : {
      "type" : "string"
    },
    "linkedin_status" : {
      "type" : "string"
    },
    "email_hour" : {
      "type" : "integer",
      "format" : "int32"
    },
    "twitter_hour" : {
      "type" : "integer",
      "format" : "int32"
    },
    "linkedin_hour" : {
      "type" : "integer",
      "format" : "int32"
    },
    "facebook_hour" : {
      "type" : "integer",
      "format" : "int32"
    }
  }
},"NewsletterSettings": {
  "required" : [ "_id" ],
  "properties" : {
    "_id" : {
      "type" : "string"
    },
    "email_status" : {
      "type" : "string"
    },
    "twitter_status" : {
      "type" : "string"
    },
    "linkedin_status" : {
      "type" : "string"
    },
    "email_hour" : {
      "type" : "integer",
      "format" : "int32"
    },
    "twitter_hour" : {
      "type" : "integer",
      "format" : "int32"
    },
    "linkedin_hour" : {
      "type" : "integer",
      "format" : "int32"
    },
    "facebook_hour" : {
      "type" : "integer",
      "format" : "int32"
    }
  }
}
  }
}

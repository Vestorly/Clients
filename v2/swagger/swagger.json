{
  "swagger" : "2.0",
  "info" : {
    "description" : "Vestorly Developers API",
    "version" : "1.0.0",
    "title" : "Vestorly API",
    "termsOfService" : "http://www.vestorly.com/terms/",
    "contact" : {
      "name" : "Vestorly Team"
    },
    "license" : {
      "name" : "MIT"
    }
  },
  "host" : "staging.vestorly.com",
  "basePath" : "/api/v2",
  "tags" : [ {
    "name" : "api docs",
    "description" : "Vestorly API docs",
    "externalDocs" : {
      "description" : "Find more info here",
      "url" : "https://developers.vestorly.com"
    }
  } ],
  "schemes" : [ "https" ],
  "paths" : {
    "/advisors/{id}" : {
      "get" : {
        "tags" : [ "advisors" ],
        "description" : "Returns a single advisors",
        "operationId" : "findAdvisorByID",
        "parameters" : [ {
          "name" : "vestorly-auth",
          "in" : "query",
          "description" : "Vestorly Auth Token",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Advisor Id to fetch",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Advisor response",
            "schema" : {
              "$ref" : "#/definitions/Advisorresponse"
            }
          }
        }
      }
    },
    "/articles" : {
      "get" : {
        "tags" : [ "articles" ],
        "description" : "Returns all articles",
        "operationId" : "findArticles",
        "parameters" : [ {
          "name" : "vestorly-auth",
          "in" : "query",
          "description" : "Vestorly Auth Token",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Limit on the number of articles to return",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "text_query",
          "in" : "query",
          "description" : "Search query parameter",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sort_direction",
          "in" : "query",
          "description" : "Direction of sort (used with sort_by parameter)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sort_by",
          "in" : "query",
          "description" : "Field on model to sort by",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Response",
            "schema" : {
              "$ref" : "#/definitions/Articles"
            }
          }
        }
      }
    },
    "/articles/{id}" : {
      "get" : {
        "tags" : [ "articles" ],
        "description" : "Returns a single article",
        "operationId" : "findArticleByID",
        "parameters" : [ {
          "name" : "vestorly-auth",
          "in" : "query",
          "description" : "Vestorly Auth Token",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Article Id to fetch",
          "required" : true,
          "type" : "string",
          "format" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Article response",
            "schema" : {
              "$ref" : "#/definitions/Articleresponse"
            }
          }
        }
      }
    },
    "/events" : {
      "get" : {
        "tags" : [ "events" ],
        "description" : "Returns all events",
        "operationId" : "findEvents",
        "parameters" : [ {
          "name" : "vestorly-auth",
          "in" : "query",
          "description" : "Vestorly Auth Token",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Event response",
            "schema" : {
              "$ref" : "#/definitions/Events"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "events" ],
        "description" : "Creates a new event in the system",
        "operationId" : "createEvent",
        "parameters" : [ {
          "name" : "vestorly-auth",
          "in" : "query",
          "description" : "Vestorly Auth Token",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "Event",
          "description" : "Event",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/EventInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Event response",
            "schema" : {
              "$ref" : "#/definitions/Eventresponse"
            }
          }
        }
      }
    },
    "/events/{id}" : {
      "get" : {
        "tags" : [ "events" ],
        "description" : "Returns a single event if the user has access",
        "operationId" : "findEventByID",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Mongo ID of event to fetch",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "vestorly-auth",
          "in" : "query",
          "description" : "Vestorly Auth Token",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Event response",
            "schema" : {
              "$ref" : "#/definitions/Eventresponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "events" ],
        "description" : "Updates a single event by mongo id",
        "operationId" : "updateEventByID",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Mongo ID of event to update",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "vestorly-auth",
          "in" : "query",
          "description" : "Vestorly Auth Token",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "event",
          "description" : "The event object to be created",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/EventInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Event response",
            "schema" : {
              "$ref" : "#/definitions/Eventresponse"
            }
          }
        }
      }
    },
    "/groups" : {
      "get" : {
        "tags" : [ "groups" ],
        "description" : "Returns all groups",
        "operationId" : "findGroups",
        "parameters" : [ {
          "name" : "vestorly-auth",
          "in" : "query",
          "description" : "Vestorly Auth Token",
          "required" : true,
          "type" : "string",
          "format" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Group response",
            "schema" : {
              "$ref" : "#/definitions/Groups"
            }
          }
        }
      }
    },
    "/groups/{id}" : {
      "get" : {
        "tags" : [ "groups" ],
        "description" : "Returns a single group if user has access",
        "operationId" : "findGroupByID",
        "parameters" : [ {
          "name" : "vestorly-auth",
          "in" : "query",
          "description" : "Vestorly Auth Token",
          "required" : true,
          "type" : "string",
          "format" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Mongo ID of group to fetch",
          "required" : true,
          "type" : "string",
          "format" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Group response",
            "schema" : {
              "$ref" : "#/definitions/Group"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "groups" ],
        "description" : "Creates a new Group",
        "operationId" : "addGroup",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "group",
          "description" : "Group to add",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Group"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "group response",
            "schema" : {
              "$ref" : "#/definitions/GroupInput"
            }
          },
          "default" : {
            "description" : "unexpected error",
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "groups" ],
        "description" : "Creates a new Group",
        "operationId" : "addGroup",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "vestorly-auth",
          "in" : "query",
          "description" : "Vestorly Auth Token",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "id of group to update",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "group",
          "description" : "Group to add",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Group"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "group response",
            "schema" : {
              "$ref" : "#/definitions/GroupInput"
            }
          },
          "default" : {
            "description" : "unexpected error",
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "groups" ],
        "description" : "Deletes a Group",
        "operationId" : "deleteGroup",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "group",
          "description" : "Group to remove",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Group"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "group response",
            "schema" : {
              "$ref" : "#/definitions/GroupInput"
            }
          },
          "default" : {
            "description" : "unexpected error",
            "schema" : {
              "$ref" : "#/definitions/ErrorModel"
            }
          }
        }
      }
    },
    "/member_events" : {
      "get" : {
        "tags" : [ "member_events" ],
        "description" : "Returns all MemberEvents",
        "operationId" : "findMemberEvents",
        "parameters" : [ {
          "name" : "vestorly-auth",
          "in" : "query",
          "description" : "Vestorly Auth Token",
          "required" : true,
          "type" : "string",
          "format" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "member event response",
            "schema" : {
              "$ref" : "#/definitions/MemberEventModel"
            }
          }
        }
      }
    },
    "/members" : {
      "get" : {
        "tags" : [ "members" ],
        "description" : "Returns all members",
        "operationId" : "findMembers",
        "parameters" : [ {
          "name" : "vestorly-auth",
          "in" : "query",
          "description" : "Vestorly Auth Token",
          "required" : true,
          "type" : "string",
          "format" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Member response",
            "schema" : {
              "$ref" : "#/definitions/Members"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "members" ],
        "description" : "Create a new member in the Vestorly Platform",
        "operationId" : "createMember",
        "parameters" : [ {
          "name" : "vestorly-auth",
          "in" : "query",
          "description" : "Vestorly Auth Token",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "member",
          "description" : "Member you want to create",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Member"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "member response",
            "schema" : {
              "$ref" : "#/definitions/Memberresponse"
            }
          }
        }
      }
    },
    "/members/{id}" : {
      "get" : {
        "tags" : [ "members" ],
        "description" : "Returns a single member",
        "operationId" : "findMemberByID",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Mongo ID of member to fetch",
          "required" : true,
          "type" : "string",
          "format" : "string"
        }, {
          "name" : "vestorly-auth",
          "in" : "query",
          "description" : "Vestorly Auth Token",
          "required" : true,
          "type" : "string",
          "format" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Member response",
            "schema" : {
              "$ref" : "#/definitions/Memberresponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "members" ],
        "description" : "Returns a single member",
        "operationId" : "findMemberByID",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Mongo ID of member to fetch",
          "required" : true,
          "type" : "string",
          "format" : "string"
        }, {
          "name" : "vestorly-auth",
          "in" : "query",
          "description" : "Vestorly Auth Token",
          "required" : true,
          "type" : "string",
          "format" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Member response",
            "schema" : {
              "$ref" : "#/definitions/Memberresponse"
            }
          }
        }
      }
    },
    "/newsletter_settings" : {
      "get" : {
        "tags" : [ "newsletter_settings" ],
        "description" : "Returns all newsletter settings",
        "operationId" : "findNewsletterSettings",
        "parameters" : [ {
          "name" : "vestorly-auth",
          "in" : "query",
          "description" : "Vestorly Auth Token",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "newsletter settings response",
            "schema" : {
              "$ref" : "#/definitions/Newslettersettings"
            }
          }
        }
      }
    },
    "/newsletter_settings/{id}" : {
      "get" : {
        "tags" : [ "newsletter_settings" ],
        "description" : "Returns a single newsletter settings if the user has access",
        "operationId" : "findNewsletterSettingsByID",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Mongo ID of newsletter settings to fetch",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "vestorly-auth",
          "in" : "query",
          "description" : "Vestorly Auth Token",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "newsletting setting response",
            "schema" : {
              "$ref" : "#/definitions/Newslettersettingresponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "newsletter_settings" ],
        "description" : "Update a single newsletter setting by ID",
        "operationId" : "updateNewsletterSettingsByID",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Mongo ID of newsletter settings to update",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "vestorly-auth",
          "in" : "query",
          "description" : "Vestorly Auth Token",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "newsletter_setting",
          "description" : "newsletter settings",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/NewsletterSettingsInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "newsletter settings response",
            "schema" : {
              "$ref" : "#/definitions/Newslettersettingresponse"
            }
          }
        }
      }
    },
    "/newsletters" : {
      "get" : {
        "tags" : [ "newsletters" ],
        "description" : "Returns all events",
        "operationId" : "findNewsletters",
        "parameters" : [ {
          "name" : "vestorly-auth",
          "in" : "query",
          "description" : "Vestorly Auth Token",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Newsletter response",
            "schema" : {
              "$ref" : "#/definitions/Newsletter"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "newsletters" ],
        "description" : "Creates a newsletter",
        "operationId" : "createNewsletter",
        "parameters" : [ {
          "name" : "vestorly-auth",
          "in" : "query",
          "description" : "Vestorly Auth Token",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "newsletter",
          "description" : "Newsletter",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/NewsletterInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Newsletter response",
            "schema" : {
              "$ref" : "#/definitions/Newsletterresponse"
            }
          }
        }
      }
    },
    "/newsletters/{id}" : {
      "get" : {
        "tags" : [ "newsletters" ],
        "description" : "Get a newsletter by ID",
        "operationId" : "getNewsletterByID",
        "parameters" : [ {
          "name" : "vestorly-auth",
          "in" : "query",
          "description" : "Vestorly Auth Token",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Mongo ID of event to get",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Newsletter response",
            "schema" : {
              "$ref" : "#/definitions/Newsletterresponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "newsletters" ],
        "description" : "Updates a newsletter",
        "operationId" : "updateNewsletterByID",
        "parameters" : [ {
          "name" : "vestorly-auth",
          "in" : "query",
          "description" : "Vestorly Auth Token",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Mongo ID of event to update",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "newsletter",
          "description" : "Newsletter",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/NewsletterInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Newsletter response",
            "schema" : {
              "$ref" : "#/definitions/Newsletterresponse"
            }
          }
        }
      }
    },
    "/posts" : {
      "get" : {
        "tags" : [ "posts" ],
        "description" : "Query all posts",
        "operationId" : "findPosts",
        "parameters" : [ {
          "name" : "vestorly-auth",
          "in" : "query",
          "description" : "Vestorly Auth Token",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "text_query",
          "in" : "query",
          "description" : "Filter post by parameters",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "external_url",
          "in" : "query",
          "description" : "Filter by External URL",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "is_published",
          "in" : "query",
          "description" : "Filter by is_published boolean",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "posts response",
            "schema" : {
              "$ref" : "#/definitions/Posts"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "posts" ],
        "description" : "Create a new post in the Vestorly Platform",
        "operationId" : "createPost",
        "parameters" : [ {
          "name" : "vestorly-auth",
          "in" : "query",
          "description" : "Vestorly Auth Token",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "post",
          "description" : "Post you want to create",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PostInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "posts response",
            "schema" : {
              "$ref" : "#/definitions/Post"
            }
          }
        }
      }
    },
    "/posts/{id}" : {
      "get" : {
        "tags" : [ "posts" ],
        "description" : "Query all posts",
        "operationId" : "getPostByID",
        "parameters" : [ {
          "name" : "vestorly-auth",
          "in" : "query",
          "description" : "Vestorly Auth Token",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "ID of post to fetch",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "post response",
            "schema" : {
              "$ref" : "#/definitions/Postresponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "posts" ],
        "description" : "Update A Post",
        "operationId" : "updatePostByID",
        "parameters" : [ {
          "name" : "vestorly-auth",
          "in" : "query",
          "description" : "Vestorly Auth Token",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "id of post to update",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "post",
          "description" : "Post you want to update",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Post"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "post response",
            "schema" : {
              "$ref" : "#/definitions/Postresponse"
            }
          }
        }
      }
    },
    "/sessions" : {
      "post" : {
        "tags" : [ "sessions" ],
        "description" : "Login To Vestorly Platform",
        "operationId" : "login",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "parameters" : [ {
          "name" : "username",
          "in" : "query",
          "description" : "Username in the vestorly platform",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "password",
          "in" : "query",
          "description" : "Password in Vestorly Platform",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Response",
            "schema" : {
              "$ref" : "#/definitions/Session"
            }
          }
        }
      }
    },
    "/sessions/{id}" : {
      "delete" : {
        "tags" : [ "sessions" ],
        "description" : "Logout of the vestorly platform",
        "operationId" : "logout",
        "parameters" : [ {
          "name" : "vestorly-auth",
          "in" : "query",
          "description" : "Authenication token",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "ID of pet to session",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Response",
            "schema" : {
              "$ref" : "#/definitions/Session"
            }
          }
        }
      }
    },
    "/sources" : {
      "get" : {
        "tags" : [ "sources" ],
        "description" : "Returns all sources",
        "operationId" : "findSources",
        "parameters" : [ {
          "name" : "vestorly-auth",
          "in" : "query",
          "description" : "Vestorly Auth Token",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "source response",
            "schema" : {
              "$ref" : "#/definitions/Sources"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "sources" ],
        "description" : "Create source",
        "operationId" : "createSource",
        "parameters" : [ {
          "name" : "vestorly-auth",
          "in" : "query",
          "description" : "Vestorly Auth Token",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "source",
          "description" : "Source",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/SourceInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "source response",
            "schema" : {
              "$ref" : "#/definitions/Sourceresponse"
            }
          }
        }
      }
    },
    "/sources/{id}" : {
      "get" : {
        "tags" : [ "sources" ],
        "description" : "Get Source By ID",
        "operationId" : "getSourceByID",
        "parameters" : [ {
          "name" : "vestorly-auth",
          "in" : "query",
          "description" : "Vestorly Auth Token",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "ID of source to fetch",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "source response",
            "schema" : {
              "$ref" : "#/definitions/Sourceresponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "sources" ],
        "description" : "Update Source By ID",
        "operationId" : "updateSourceByID",
        "parameters" : [ {
          "name" : "vestorly-auth",
          "in" : "query",
          "description" : "Vestorly Auth Token",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "ID of source to fetch",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "source",
          "description" : "Source",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/SourceInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "source response",
            "schema" : {
              "$ref" : "#/definitions/Sourceresponse"
            }
          }
        }
      }
    }
  },
  "definitions" : {
    "Advisorresponse" : {
      "properties" : {
        "advisor" : {
          "$ref" : "#/definitions/Advisor"
        }
      }
    },
    "Advisor" : {
      "required" : [ "id", "name" ],
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "tag" : {
          "type" : "string"
        }
      }
    },
    "Advisors" : {
      "properties" : {
        "advisors" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Advisor"
          }
        }
      }
    },
    "Postresponse" : {
      "properties" : {
        "post" : {
          "$ref" : "#/definitions/Post"
        }
      }
    },
    "Postrequest" : {
      "properties" : {
        "post" : {
          "$ref" : "#/definitions/PostInput"
        }
      }
    },
    "Post" : {
      "properties" : {
        "_id" : {
          "type" : "string"
        },
        "title" : {
          "type" : "string"
        },
        "post_date" : {
          "type" : "string"
        },
        "body" : {
          "type" : "string"
        },
        "comment" : {
          "type" : "string"
        },
        "client_only" : {
          "type" : "boolean",
          "default" : false
        },
        "attachment" : {
          "type" : "string"
        },
        "video" : {
          "type" : "string"
        },
        "img" : {
          "type" : "string"
        },
        "image_url" : {
          "type" : "string"
        },
        "img_compressed" : {
          "type" : "boolean",
          "default" : false
        },
        "img_changed" : {
          "type" : "boolean",
          "default" : false
        },
        "topic" : {
          "type" : "string"
        },
        "vestorly_url" : {
          "type" : "string"
        }
      }
    },
    "PostInput" : {
      "required" : [ "title" ],
      "properties" : {
        "title" : {
          "type" : "string"
        },
        "post_date" : {
          "type" : "string"
        },
        "body" : {
          "type" : "string"
        },
        "comment" : {
          "type" : "string"
        },
        "client_only" : {
          "type" : "boolean",
          "default" : false
        },
        "attachment" : {
          "type" : "string"
        },
        "video" : {
          "type" : "string"
        },
        "img" : {
          "type" : "string"
        },
        "image_url" : {
          "type" : "string"
        },
        "img_compressed" : {
          "type" : "boolean",
          "default" : false
        },
        "img_changed" : {
          "type" : "boolean",
          "default" : false
        },
        "topic" : {
          "type" : "string"
        }
      }
    },
    "Session" : {
      "properties" : {
        "_id" : {
          "type" : "string"
        },
        "vestorly-auth" : {
          "type" : "string"
        },
        "new_user" : {
          "type" : "boolean",
          "default" : false
        },
        "current_user" : {
          "$ref" : "#/definitions/User"
        },
        "settings" : {
          "$ref" : "#/definitions/Settings"
        }
      }
    },
    "Settings" : {
      "required" : [ "_id" ],
      "properties" : {
        "_id" : {
          "type" : "string"
        },
        "company" : {
          "type" : "string"
        },
        "picture_url" : {
          "type" : "string"
        },
        "website" : {
          "type" : "string"
        },
        "disclosure" : {
          "type" : "string"
        },
        "adv_brochure" : {
          "type" : "string"
        },
        "slug" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "orgsetting" : {
          "$ref" : "#/definitions/OrgSetting"
        },
        "feature" : {
          "$ref" : "#/definitions/Features"
        },
        "personalsetting" : {
          "$ref" : "#/definitions/PersonalSettings"
        }
      }
    },
    "OrgSetting" : {
      "required" : [ "_id" ],
      "properties" : {
        "_id" : {
          "type" : "string"
        },
        "is_default" : {
          "type" : "boolean",
          "default" : false
        },
        "name" : {
          "type" : "string"
        },
        "email_theme_name" : {
          "type" : "string"
        },
        "company_address" : {
          "type" : "string"
        },
        "company_contact_email" : {
          "type" : "string"
        },
        "site_url" : {
          "type" : "string"
        },
        "company_homepage_url" : {
          "type" : "string"
        },
        "privacy_policy_url" : {
          "type" : "string"
        },
        "terms_and_conditions_url" : {
          "type" : "string"
        }
      }
    },
    "Features" : {
      "required" : [ "_id" ],
      "properties" : {
        "_id" : {
          "type" : "string"
        }
      }
    },
    "PersonalSettings" : {
      "required" : [ "_id" ],
      "properties" : {
        "_id" : {
          "type" : "string"
        }
      }
    },
    "User" : {
      "required" : [ "_id" ],
      "properties" : {
        "_id" : {
          "type" : "string"
        },
        "company" : {
          "type" : "string"
        },
        "picture_url" : {
          "type" : "string"
        },
        "website" : {
          "type" : "string"
        },
        "user_type" : {
          "type" : "string"
        },
        "slug" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "username" : {
          "type" : "string"
        },
        "first_name" : {
          "type" : "string"
        },
        "last_name" : {
          "type" : "string"
        },
        "new_user" : {
          "type" : "boolean",
          "default" : false
        },
        "show_tour" : {
          "type" : "boolean",
          "default" : false
        },
        "plan_setup" : {
          "type" : "boolean",
          "default" : false
        },
        "plan_expired" : {
          "type" : "boolean",
          "default" : false
        },
        "plan_status" : {
          "type" : "string"
        },
        "plan_id" : {
          "type" : "string"
        },
        "plan_stripe" : {
          "type" : "boolean",
          "default" : false
        }
      }
    },
    "Article" : {
      "required" : [ "_id" ],
      "properties" : {
        "_id" : {
          "type" : "string"
        },
        "created_at" : {
          "type" : "string"
        },
        "title" : {
          "type" : "string"
        },
        "open_calais_topics" : {
          "type" : "string"
        },
        "open_calais_keywords" : {
          "type" : "string"
        },
        "vestorly_topics" : {
          "type" : "string"
        },
        "categories" : {
          "type" : "string"
        },
        "summary" : {
          "type" : "string"
        },
        "unparsed_html" : {
          "type" : "string"
        },
        "logo_url" : {
          "type" : "string"
        },
        "image_url" : {
          "type" : "string"
        },
        "url" : {
          "type" : "string"
        },
        "external_url" : {
          "type" : "string"
        },
        "tags" : {
          "type" : "string"
        }
      }
    },
    "Articleresponse" : {
      "properties" : {
        "article" : {
          "$ref" : "#/definitions/Article"
        }
      }
    },
    "Articles" : {
      "properties" : {
        "articles" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Article"
          }
        }
      }
    },
    "Newsletterresponse" : {
      "properties" : {
        "newsletter" : {
          "$ref" : "#/definitions/Post"
        }
      }
    },
    "Newsletter" : {
      "properties" : {
        "_id" : {
          "type" : "string"
        },
        "is_sent" : {
          "type" : "boolean",
          "default" : false
        },
        "is_default" : {
          "type" : "boolean",
          "default" : false
        },
        "click_count" : {
          "type" : "integer",
          "format" : "int64"
        },
        "unique_click_count" : {
          "type" : "integer",
          "format" : "int64"
        },
        "total_click_count" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "NewsletterInput" : {
      "properties" : {
        "is_sent" : {
          "type" : "boolean",
          "default" : false
        },
        "is_default" : {
          "type" : "boolean",
          "default" : false
        },
        "click_count" : {
          "type" : "integer",
          "format" : "int64"
        },
        "unique_click_count" : {
          "type" : "integer",
          "format" : "int64"
        },
        "total_click_count" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "Newsletters" : {
      "properties" : {
        "newletters" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Newsletter"
          }
        }
      }
    },
    "Memberresponse" : {
      "properties" : {
        "member" : {
          "$ref" : "#/definitions/Member"
        }
      }
    },
    "Members" : {
      "properties" : {
        "posts" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Member"
          }
        },
        "more_results" : {
          "type" : "boolean",
          "default" : false
        }
      }
    },
    "Member" : {
      "required" : [ "_id", "email" ],
      "properties" : {
        "_id" : {
          "type" : "string"
        },
        "email" : {
          "type" : "string"
        },
        "first_name" : {
          "type" : "string"
        },
        "last_name" : {
          "type" : "string"
        },
        "phone" : {
          "type" : "string"
        },
        "address" : {
          "type" : "string"
        },
        "city" : {
          "type" : "string"
        },
        "state" : {
          "type" : "string"
        },
        "zip" : {
          "type" : "string"
        },
        "gender" : {
          "type" : "string"
        },
        "age" : {
          "type" : "string"
        },
        "education" : {
          "type" : "string"
        },
        "high_net_worth" : {
          "type" : "boolean",
          "default" : false
        },
        "home_market_value" : {
          "type" : "string"
        },
        "home_owner_status" : {
          "type" : "string"
        },
        "household_income" : {
          "type" : "string"
        },
        "marital_status" : {
          "type" : "string"
        },
        "occupation" : {
          "type" : "string"
        },
        "hometown" : {
          "type" : "string"
        },
        "family" : {
          "type" : "string"
        },
        "tags" : {
          "type" : "string"
        },
        "message" : {
          "type" : "string"
        },
        "location" : {
          "type" : "string"
        },
        "picture_url" : {
          "type" : "string"
        },
        "profile_url" : {
          "type" : "string"
        },
        "estimated_location" : {
          "type" : "string"
        },
        "estimated_zip" : {
          "type" : "string"
        },
        "register_ip_addr" : {
          "type" : "string"
        },
        "data_estimated" : {
          "type" : "boolean",
          "default" : false
        },
        "genuine_email" : {
          "type" : "boolean",
          "default" : false
        }
      }
    },
    "Eventresponse" : {
      "properties" : {
        "event" : {
          "$ref" : "#/definitions/Event"
        }
      }
    },
    "EventInput" : {
      "required" : [ "advisor_email", "newsletter", "original_url", "originator_group_name", "subject_email" ],
      "properties" : {
        "referer" : {
          "type" : "string"
        },
        "original_url" : {
          "type" : "string"
        },
        "originator_email" : {
          "type" : "string"
        },
        "subject_email" : {
          "type" : "string"
        },
        "advisor_email" : {
          "type" : "string"
        },
        "originator_group_name" : {
          "type" : "string"
        },
        "newsletter" : {
          "type" : "string"
        }
      }
    },
    "Events" : {
      "properties" : {
        "events" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Event"
          }
        }
      }
    },
    "Event" : {
      "required" : [ "_id", "advisor_email", "newsletter", "original_url", "originator_group_name", "subject_email" ],
      "properties" : {
        "_id" : {
          "type" : "string"
        },
        "referer" : {
          "type" : "string"
        },
        "original_url" : {
          "type" : "string"
        },
        "originator_email" : {
          "type" : "string"
        },
        "subject_email" : {
          "type" : "string"
        },
        "advisor_email" : {
          "type" : "string"
        },
        "originator_group_name" : {
          "type" : "string"
        },
        "newsletter" : {
          "type" : "string"
        }
      }
    },
    "Group" : {
      "required" : [ "_id" ],
      "properties" : {
        "_id" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "is_default" : {
          "type" : "boolean",
          "default" : false
        },
        "is_hidden" : {
          "type" : "boolean",
          "default" : false
        },
        "new_weekly_mailer_content" : {
          "type" : "string"
        },
        "newsletter_subject" : {
          "type" : "string"
        },
        "autopublish" : {
          "type" : "boolean",
          "default" : false
        },
        "number_articles_per_group" : {
          "type" : "integer",
          "format" : "int32"
        },
        "number_articles_per_newsletter" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "GroupInput" : {
      "required" : [ "_id" ],
      "properties" : {
        "_id" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "is_default" : {
          "type" : "boolean",
          "default" : false
        },
        "is_hidden" : {
          "type" : "boolean",
          "default" : false
        },
        "new_weekly_mailer_content" : {
          "type" : "string"
        },
        "newsletter_subject" : {
          "type" : "string"
        },
        "autopublish" : {
          "type" : "boolean",
          "default" : false
        },
        "number_articles_per_group" : {
          "type" : "integer",
          "format" : "int32"
        },
        "number_articles_per_newsletter" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "Groups" : {
      "properties" : {
        "groups" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Group"
          }
        }
      }
    },
    "Newslettersettingresponse" : {
      "properties" : {
        "newsletter_setting" : {
          "$ref" : "#/definitions/NewsletterSetting"
        }
      }
    },
    "Newslettersettings" : {
      "properties" : {
        "newletter_settings" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/NewsletterSetting"
          }
        }
      }
    },
    "NewsletterSettingsInput" : {
      "properties" : {
        "email_status" : {
          "type" : "string"
        },
        "twitter_status" : {
          "type" : "string"
        },
        "linkedin_status" : {
          "type" : "string"
        }
      }
    },
    "NewsletterSetting" : {
      "required" : [ "_id" ],
      "properties" : {
        "_id" : {
          "type" : "string"
        },
        "email_status" : {
          "type" : "string"
        },
        "twitter_status" : {
          "type" : "string"
        },
        "linkedin_status" : {
          "type" : "string"
        },
        "email_hour" : {
          "type" : "integer",
          "format" : "int32"
        },
        "twitter_hour" : {
          "type" : "integer",
          "format" : "int32"
        },
        "linkedin_hour" : {
          "type" : "integer",
          "format" : "int32"
        },
        "facebook_hour" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "Sourceresponse" : {
      "properties" : {
        "source" : {
          "$ref" : "#/definitions/Source"
        }
      }
    },
    "Source" : {
      "required" : [ "_id", "custom_rss_feed", "enabled", "logo_url", "name", "rss_publisher" ],
      "properties" : {
        "_id" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "url" : {
          "type" : "string"
        },
        "logo_url" : {
          "type" : "string"
        },
        "enabled" : {
          "type" : "boolean",
          "default" : false
        },
        "custom_rss_feed" : {
          "type" : "boolean",
          "default" : false
        },
        "rss_publisher" : {
          "type" : "string"
        }
      }
    },
    "SourceInput" : {
      "required" : [ "custom_rss_feed", "enabled", "logo_url", "name", "rss_publisher" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "url" : {
          "type" : "string"
        },
        "logo_url" : {
          "type" : "string"
        },
        "enabled" : {
          "type" : "boolean",
          "default" : false
        },
        "custom_rss_feed" : {
          "type" : "boolean",
          "default" : false
        },
        "rss_publisher" : {
          "type" : "string"
        }
      }
    },
    "Sources" : {
      "properties" : {
        "sources" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Source"
          }
        }
      }
    }
  }
}
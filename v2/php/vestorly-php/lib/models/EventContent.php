<?php
/**
 *  Copyright 2015 Reverb Technologies, Inc.
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

/**
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program. Do not edit the class manually.
 *
 */

namespace Vestorly\models;

use \ArrayAccess;

class EventContent implements ArrayAccess {
  static $swaggerTypes = array(
      '_id' => 'string',
      'content_field' => 'string',
      'content_id' => 'string',
      'content_type' => 'string',
      'created_at' => 'string',
      'slug' => 'string',
      'updated_at' => 'string'
  );

  static $attributeMap = array(
      '_id' => '_id',
      'content_field' => 'content_field',
      'content_id' => 'content_id',
      'content_type' => 'content_type',
      'created_at' => 'created_at',
      'slug' => 'slug',
      'updated_at' => 'updated_at'
  );

  
  /**
  * Mongo id of event
  */
  public $_id; /* string */
  public $content_field; /* string */
  public $content_id; /* string */
  public $content_type; /* string */
  public $created_at; /* string */
  public $slug; /* string */
  public $updated_at; /* string */

  public function __construct(array $data = null) {
    $this->_id = $data["_id"];
    $this->content_field = $data["content_field"];
    $this->content_id = $data["content_id"];
    $this->content_type = $data["content_type"];
    $this->created_at = $data["created_at"];
    $this->slug = $data["slug"];
    $this->updated_at = $data["updated_at"];
  }

  public function offsetExists($offset) {
    return isset($this->$offset);
  }

  public function offsetGet($offset) {
    return $this->$offset;
  }

  public function offsetSet($offset, $value) {
    $this->$offset = $value;
  }

  public function offsetUnset($offset) {
    unset($this->$offset);
  }
}

<?php
/**
 *  Copyright 2015 Reverb Technologies, Inc.
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

/**
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program. Do not edit the class manually.
 *
 */

namespace Vestorly\models;

use \ArrayAccess;

class Article implements ArrayAccess {
  static $swaggerTypes = array(
      '_id' => 'string',
      'created_at' => 'string',
      'title' => 'string',
      'body' => 'string',
      'is_responsive' => 'boolean',
      'is_proxy_needed' => 'boolean',
      'is_mobile_proxy_needed' => 'boolean',
      'needs_sanitize' => 'boolean',
      'proxy_url' => 'string',
      'topic' => 'string',
      'suitability_score' => 'string',
      'summary' => 'string',
      'image_path' => 'string',
      'image_url' => 'string',
      'image_height' => 'int',
      'image_width' => 'int',
      'logo_url' => 'string',
      'square_logo_url' => 'string',
      'url' => 'string',
      'external_url' => 'string',
      'external_url_source' => 'string',
      'external_url_type' => 'string'
  );

  static $attributeMap = array(
      '_id' => '_id',
      'created_at' => 'created_at',
      'title' => 'title',
      'body' => 'body',
      'is_responsive' => 'is_responsive',
      'is_proxy_needed' => 'is_proxy_needed',
      'is_mobile_proxy_needed' => 'is_mobile_proxy_needed',
      'needs_sanitize' => 'needs_sanitize',
      'proxy_url' => 'proxy_url',
      'topic' => 'topic',
      'suitability_score' => 'suitability_score',
      'summary' => 'summary',
      'image_path' => 'image_path',
      'image_url' => 'image_url',
      'image_height' => 'image_height',
      'image_width' => 'image_width',
      'logo_url' => 'logo_url',
      'square_logo_url' => 'square_logo_url',
      'url' => 'url',
      'external_url' => 'external_url',
      'external_url_source' => 'external_url_source',
      'external_url_type' => 'external_url_type'
  );

  
  public $_id; /* string */
  public $created_at; /* string */
  public $title; /* string */
  public $body; /* string */
  public $is_responsive; /* boolean */
  public $is_proxy_needed; /* boolean */
  public $is_mobile_proxy_needed; /* boolean */
  public $needs_sanitize; /* boolean */
  public $proxy_url; /* string */
  public $topic; /* string */
  public $suitability_score; /* string */
  public $summary; /* string */
  public $image_path; /* string */
  public $image_url; /* string */
  public $image_height; /* int */
  public $image_width; /* int */
  public $logo_url; /* string */
  public $square_logo_url; /* string */
  public $url; /* string */
  public $external_url; /* string */
  public $external_url_source; /* string */
  public $external_url_type; /* string */

  public function __construct(array $data = null) {
    $this->_id = $data["_id"];
    $this->created_at = $data["created_at"];
    $this->title = $data["title"];
    $this->body = $data["body"];
    $this->is_responsive = $data["is_responsive"];
    $this->is_proxy_needed = $data["is_proxy_needed"];
    $this->is_mobile_proxy_needed = $data["is_mobile_proxy_needed"];
    $this->needs_sanitize = $data["needs_sanitize"];
    $this->proxy_url = $data["proxy_url"];
    $this->topic = $data["topic"];
    $this->suitability_score = $data["suitability_score"];
    $this->summary = $data["summary"];
    $this->image_path = $data["image_path"];
    $this->image_url = $data["image_url"];
    $this->image_height = $data["image_height"];
    $this->image_width = $data["image_width"];
    $this->logo_url = $data["logo_url"];
    $this->square_logo_url = $data["square_logo_url"];
    $this->url = $data["url"];
    $this->external_url = $data["external_url"];
    $this->external_url_source = $data["external_url_source"];
    $this->external_url_type = $data["external_url_type"];
  }

  public function offsetExists($offset) {
    return isset($this->$offset);
  }

  public function offsetGet($offset) {
    return $this->$offset;
  }

  public function offsetSet($offset, $value) {
    $this->$offset = $value;
  }

  public function offsetUnset($offset) {
    unset($this->$offset);
  }
}

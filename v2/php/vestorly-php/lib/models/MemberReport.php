<?php
/**
 *  Copyright 2015 Reverb Technologies, Inc.
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

/**
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program. Do not edit the class manually.
 *
 */

namespace Vestorly\models;

use \ArrayAccess;

class MemberReport implements ArrayAccess {
  static $swaggerTypes = array(
      'day' => 'int',
      'event_count' => 'int',
      'originator_group_id' => 'string',
      'parent_originator_id' => 'string',
      'source' => 'string',
      'type' => 'string',
      'year' => 'int'
  );

  static $attributeMap = array(
      'day' => 'day',
      'event_count' => 'event_count',
      'originator_group_id' => 'originator_group_id',
      'parent_originator_id' => 'parent_originator_id',
      'source' => 'source',
      'type' => 'type',
      'year' => 'year'
  );

  
  public $day; /* int */
  public $event_count; /* int */
  public $originator_group_id; /* string */
  public $parent_originator_id; /* string */
  public $source; /* string */
  public $type; /* string */
  public $year; /* int */

  public function __construct(array $data = null) {
    $this->day = $data["day"];
    $this->event_count = $data["event_count"];
    $this->originator_group_id = $data["originator_group_id"];
    $this->parent_originator_id = $data["parent_originator_id"];
    $this->source = $data["source"];
    $this->type = $data["type"];
    $this->year = $data["year"];
  }

  public function offsetExists($offset) {
    return isset($this->$offset);
  }

  public function offsetGet($offset) {
    return $this->$offset;
  }

  public function offsetSet($offset, $value) {
    $this->$offset = $value;
  }

  public function offsetUnset($offset) {
    unset($this->$offset);
  }
}
